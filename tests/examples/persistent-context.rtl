# Persistent Context Agent - Builds knowledge across conversations
# Uses Rutile's stack to maintain conversation state

# Global conversation memory (simulated with variables)
"" "conversation-history" bind
"" "learned-facts" bind

: remember-fact ( fact -- )
  "learned-facts" get-local " | " concat swap concat "learned-facts" bind
;

: add-to-history ( exchange -- )
  "conversation-history" get-local "\n" concat swap concat "conversation-history" bind
;

: contextual-call ( prompt -- response )
  # Build full context
  "Conversation history: " "conversation-history" get-local concat
  "\nLearned facts: " concat "learned-facts" get-local concat
  "\nNew query: " concat swap concat
  
  llm-default-config swap llm-call
  
  # Remember this exchange
  dup "Q: " rot concat " | A: " concat swap concat add-to-history
;

: learn-from-response ( response -- extracted-facts )
  "Extract key facts from this response as a short list: " swap concat
  llm-default-config swap llm-call
  dup remember-fact
;

: smart-conversation ( query -- response )
  contextual-call
  dup learn-from-response drop
;

# Demo conversation
"What is machine learning?" smart-conversation print-top
"How does it relate to AI?" smart-conversation print-top
"What are practical applications?" smart-conversation print-top

# Show accumulated knowledge
"learned-facts" get-local print-top