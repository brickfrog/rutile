# Complete supervisor tree test
"=== Supervisor Tree Test ===" print-top

# Start supervisor
start-supervisor print-top

# Spawn multiple agents
[1 2 +] spawn-agent "agent-1" bind
[10 20 *] spawn-agent "agent-2" bind
[100 200 /] spawn-agent "agent-3" bind

# List all agents
"Active agents:" print-top
agent-list print-top

# Supervise agents with different policies
"agent-1" get-local "permanent" "restart-always" supervise-agent print-top
"agent-2" get-local "temporary" "restart-once" supervise-agent print-top
"agent-3" get-local "transient" "restart-never" supervise-agent print-top

# Check agent info
"Agent 1 info:" print-top
"agent-1" get-local agent-info print-top

"Agent 2 info:" print-top
"agent-2" get-local agent-info print-top

"Agent 3 info:" print-top
"agent-3" get-local agent-info print-top

# Check agent health
"Agent 1 health:" print-top
"agent-1" get-local agent-health print-top

"Agent 2 health:" print-top
"agent-2" get-local agent-health print-top

"Agent 3 health:" print-top
"agent-3" get-local agent-health print-top

# Kill an agent to test supervision
"Killing agent-2..." print-top
"agent-2" get-local agent-kill print-top

# List agents after kill
"Active agents after kill:" print-top
agent-list print-top

# Stop supervisor
stop-supervisor print-top

"=== Supervisor Tree Test Complete ===" print-top